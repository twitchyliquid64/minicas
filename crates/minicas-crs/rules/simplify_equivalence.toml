[add-with-identical-operands]
meta = {is_simplify = true}
match.op = '+'
match.lhs = {not_op = 'const'}
match.rhs = {not_op = 'const'}
match.equal = [{l = [0], r = [1]}]

tests = [
	{from = 'a + a', to = '2a'},
]
[add-with-identical-operands.rewrite]
base = "2 * 1"
replace = [
    [[0], [1]],
]

[sub-with-identical-operands]
meta = {is_simplify = true}
match.op = '-'
match.equal = [{l = [0], r = [1]}]

tests = [
    {from = 'a - a', to = '0'},
]
[sub-with-identical-operands.rewrite]
base = "0"
replace = []

[div-with-identical-operands]
meta = {is_simplify = true}
match.op = '/'
match.equal = [{l = [0], r = [1]}]

tests = [
    {from = 'a / a', to = '1'},
]
[div-with-identical-operands.rewrite]
base = "1"
replace = []

[elim-mul-div-cancel-lhs-with-denom]
meta = {is_simplify = true}
match.op = '*'
match.rhs = {op = '/'}
match.equal = [{l = [0], r = [1, 1]}]
tests = [
    {from = 'a * (b/a)', to = 'b'},
]
[elim-mul-div-cancel-lhs-with-denom.rewrite]
base = "1"
replace = [
    [[1, 0], []],
]

[elim-mul-div-cancel-rhs-with-denom]
meta = {is_simplify = true}
match.op = '*'
match.lhs = {op = '/'}
match.equal = [{l = [0, 1], r = [1]}]
tests = [
    {from = '(b/a) * a', to = 'b'},
]
[elim-mul-div-cancel-rhs-with-denom.rewrite]
base = "1"
replace = [
    [[0, 0], []],
]

[elim-div-mul-cancel-lhs-with-denom]
meta = {is_simplify = true}
match.op = '/'
match.lhs = {op = '*'}
match.equal = [{l = [0, 0], r = [1]}]
tests = [
    {from = '(a*b) / a', to = 'b'},
]
[elim-div-mul-cancel-lhs-with-denom.rewrite]
base = "1"
replace = [
    [[0, 1], []],
]

[elim-div-mul-cancel-rhs-with-denom]
meta = {is_simplify = true}
match.op = '/'
match.lhs = {op = '*'}
match.equal = [{l = [0, 1], r = [1]}]
tests = [
    {from = '(b*a) / a', to = 'b'},
]
[elim-div-mul-cancel-rhs-with-denom.rewrite]
base = "1"
replace = [
    [[0, 0], []],
]

[elim-div-mul-cancel-rhs-reciprocal-denom]
meta = {is_simplify = true}
match.op = '/'
match.rhs = {op = '*'}
match.equal = [{l = [0], r = [1, 1]}]
tests = [
    {from = 'a / (b*a)', to = '1/b'},
]
[elim-div-mul-cancel-rhs-reciprocal-denom.rewrite]
base = "1/2"
replace = [
    [[1, 0], [1]],
]

[elim-div-mul-cancel-lhs-reciprocal-denom]
meta = {is_simplify = true}
match.op = '/'
match.rhs = {op = '*'}
match.equal = [{l = [0], r = [1, 0]}]
tests = [
    {from = 'a / (a*b)', to = '1/b'},
]
[elim-div-mul-cancel-lhs-reciprocal-denom.rewrite]
base = "1/2"
replace = [
    [[1, 1], [1]],
]

[div-of-pow-2]
meta = {is_simplify = true}
match.op = '/'
match.lhs = {op = 'pow', rhs = {const = '2'}}
match.equal = [{l = [0, 0], r = [1]}]
replace.from = [1]
replace.to = []
tests = [
    {from = 'pow(a, 2) / a', to = 'a'},
]