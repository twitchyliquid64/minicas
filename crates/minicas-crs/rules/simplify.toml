[mul-coefficients-on-lhs]
match.op = '*'
match.lhs = {not_op = 'const'}
match.rhs = {op = 'const'}

action.swap = [[0], [1]]

tests = [
	{from = 'x * 4', to = '4x'},
	{from = '3x * 2', to = '2 * 3x'},
]

[elim-div-denom-1]
match.op = '/'
match.rhs = {const = '1'}

replace.from = [0] # using the numerator (first lhs)
replace.to = []    # overwrite self

tests = [
	{from = '12 / 1', to = '12'},
]

[elim-div-num-0]
match.op = '/'
match.lhs = {const = '0'}

replace.from = [0]
replace.to = []

tests = [
	{from = '0 / a', to = '0'},
]

[elim-mul-by-1]
match.op = '*'
match.lhs = {const = '1'}

replace.from = [1]
replace.to = []

tests = [
	{from = '1 * 12', to = '12'},
]

[elim-mul-by-0]
match.op = '*'
match.lhs = {const = '0'}

replace.from = [0]
replace.to = []

tests = [
	{from = '0 * a', to = '0'},
]

[abs-of-negation]
match.op = 'abs'
match.lhs = {op = 'neg'}

replace.from = [0, 0]
replace.to = [0]

tests = [
	{from = '|-a|', to = '|a|'},
]

[elim-negation-of-negation]
match.op = 'neg'
match.lhs = {op = 'neg'}

replace.from = [0, 0]
replace.to = []

tests = [
	{from = '--a', to = 'a'},
]

[div-with-two-negations]
match.op = '/'
match.lhs = {op = 'neg'}
match.rhs = {op = 'neg'}

actions = [
    {from = [0, 0], to = [0]},
    {from = [1, 0], to = [1]},
]

tests = [
	{from = '(-a)/(-b)', to = 'a/b'},
]

[mul-with-two-negations]
match.op = '*'
match.lhs = {op = 'neg'}
match.rhs = {op = 'neg'}

actions = [
    {from = [0, 0], to = [0]},
    {from = [1, 0], to = [1]},
]

tests = [
	{from = '(-a) * (-b)', to = 'a*b'},
]

[elim-add-with-0-lhs]
match.op = '+'
match.lhs = {const = '0'}

replace.from = [1]
replace.to = []

tests = [
	{from = '0 + a', to = 'a'},
]

[elim-add-with-0-rhs]
match.op = '+'
match.rhs = {const = '0'}

replace.from = [0]
replace.to = []

tests = [
	{from = 'a + 0', to = 'a'},
]